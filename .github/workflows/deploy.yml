name: Deploy to Server 

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    - name: Copy files to server
      run: rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_HOST_SERVER }}:/home/${{ vars.DEPLOY_SERVER_USER }}/deploy_campus_bot

    - name: Run Docker Compose
      run: |
        ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_HOST_SERVER }} << 'EOF'
          cd /home/${{ vars.DEPLOY_SERVER_USER }}/deploy_campus_bot
          rm -f .env
          echo BOT_API_TOKEN=${{ secrets.BOT_API_TOKEN }} >> .env
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
          echo EDU_SCHOOL_LOGIN=${{ secrets.EDU_SCHOOL_LOGIN }} >> .env
          echo EDU_SCHOOL_PASSWORD=${{ secrets.EDU_SCHOOL_PASSWORD }} >> .env
          echo API_ADDRESS=${{ vars.API_ADDRESS }} >> .env
          echo API_PORT=${{ vars.API_PORT }} >> .env
          echo REDIS_HOST=${{ vars.REDIS_HOST }} >> .env
          echo REDIS_PORT=${{ vars.REDIS_PORT }} >> .env
          echo REDIS_DB=${{ vars.REDIS_DB }} >> .env
          docker compose down
          docker compose up -d --build
        EOF
